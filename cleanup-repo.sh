#!/bin/bash
# Git Repository Cleanup Script
# This script removes temporary, debug, and one-off files from git tracking

set -e

echo "🧹 Starting Git Repository Cleanup..."
echo ""

# Color codes for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Function to safely remove from git
remove_from_git() {
    local file=$1
    if git ls-files --error-unmatch "$file" > /dev/null 2>&1; then
        echo -e "${YELLOW}Removing from git:${NC} $file"
        git rm --cached "$file"
    fi
}

echo "📁 Step 1: Removing debug and temporary files from git tracking..."
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# Debug files in root
remove_from_git "debug_email.py"
remove_from_git "debug_tree.js"
remove_from_git "test_email_functionality.py"

# Debug files in backend
cd backend 2>/dev/null || true
remove_from_git "backend/debug_delete_endpoint.py"
remove_from_git "backend/debug_endpoint.py"
remove_from_git "backend/debug_forgot_response.py"
remove_from_git "backend/debug_routes.py"
cd ..

echo ""
echo "📝 Step 2: Removing one-time migration/utility scripts..."
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

remove_from_git "backend/migrate_invite_dates.py"
remove_from_git "backend/migrate_to_spaces.py"
remove_from_git "backend/fix_test_spaces.py"
remove_from_git "backend/cleanup_test_users.py"
remove_from_git "backend/seed_spaces.py"
remove_from_git "backend/analyze_data.py"
remove_from_git "backend/check_openapi.py"
remove_from_git "backend/quick_gmail_test.py"
remove_from_git "backend/simple_route_test.py"
remove_from_git "backend/routes_tree_fixed.py"
remove_from_git "backend/run_space_tests.py"
remove_from_git "backend/testgmail.py"

echo ""
echo "🧪 Step 3: Removing empty test files from backend root..."
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

remove_from_git "backend/test_comprehensive_spaces.py"
remove_from_git "backend/test_events.py"
remove_from_git "backend/test_gmail_auth.py"
remove_from_git "backend/test_hobbies.py"
remove_from_git "backend/test_import.py"
remove_from_git "backend/test_integration_spaces.py"
remove_from_git "backend/test_public_invite.py"
remove_from_git "backend/test_space_isolation.py"
remove_from_git "backend/test_tree_bugs.py"

echo ""
echo "📊 Step 4: Removing coverage artifacts (OPTIONAL - SKIPPED BY DEFAULT)..."
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# Optional step - uncomment to remove coverage artifacts
# These are regenerated by CI/CD automatically but some users prefer to keep them
# To enable: run script with CLEAN_COVERAGE=1 environment variable
# Example: CLEAN_COVERAGE=1 ./cleanup-repo.sh

if [ "$CLEAN_COVERAGE" = "1" ]; then
    echo -e "${YELLOW}Cleaning coverage artifacts (enabled via CLEAN_COVERAGE=1)${NC}"
    remove_from_git "backend/coverage.xml"
    remove_from_git "backend/coverage_badge.py"
else
    echo -e "${GREEN}Skipped${NC} (coverage artifacts kept - use CLEAN_COVERAGE=1 to remove)"
fi

echo ""
echo "📚 Step 5: Removing work-in-progress documentation..."
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# These can be added back when complete and reviewed
remove_from_git "INSTAGRAM_INTEGRATION.md"
remove_from_git "FAMILY_SPACES_SETUP.md"

echo ""
echo "🗑️  Step 6: Cleaning up local files (not in git)..."
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# Remove .DS_Store files
find . -name ".DS_Store" -delete 2>/dev/null && echo "Removed .DS_Store files" || true

# Remove __pycache__ directories
find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null && echo "Removed __pycache__ directories" || true

# Remove .pyc files
find . -name "*.pyc" -delete 2>/dev/null && echo "Removed .pyc files" || true

# Remove .pytest_cache
find . -type d -name ".pytest_cache" -exec rm -rf {} + 2>/dev/null && echo "Removed .pytest_cache directories" || true

# Remove .ruff_cache
find . -type d -name ".ruff_cache" -exec rm -rf {} + 2>/dev/null && echo "Removed .ruff_cache directories" || true

# Remove coverage files
rm -f .coverage 2>/dev/null && echo "Removed .coverage file" || true

echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo -e "${GREEN}✅ Cleanup complete!${NC}"
echo ""
echo "📋 Next steps:"
echo "1. Review the changes: git status"
echo "2. Commit the cleanup: git commit -m 'chore: cleanup debug files and temp scripts'"
echo "3. Push to remote: git push origin main"
echo ""
echo "💡 Note: The removed files are still on disk but won't be tracked by git anymore."
echo "   They're now listed in .gitignore to prevent accidental re-addition."
echo ""
echo "🔧 Optional: To also remove coverage artifacts, run:"
echo "   CLEAN_COVERAGE=1 ./cleanup-repo.sh"
